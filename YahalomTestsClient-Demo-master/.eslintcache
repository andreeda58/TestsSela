[{"C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\index.js":"1","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\reportWebVitals.js":"2","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\App.js":"3","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\PrincipalPage.jsx":"4","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Reports\\Reports.jsx":"5","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Reports\\ReportByExam.jsx":"6","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Reports\\ReportByStudent.jsx":"7","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\QuestionsComponents\\questionsForm.jsx":"8","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\QuestionsComponents\\QuestionShow.jsx":"9","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\QuestionsComponents\\questionsTable.jsx":"10","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\TestComponents\\TestForm.jsx":"11","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Exam\\UserDataExam.jsx":"12","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\TestComponents\\TestTable.jsx":"13","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Exam\\ExamForm.jsx":"14","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\services\\questionService.js":"15","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\services\\testService.js":"16","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\validations\\Validations.js":"17","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Exam\\WelcomeToExam.jsx":"18","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Exam\\ExamContent.jsx":"19","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Reports\\ByExamTables\\QuestionStaticsTable.jsx":"20","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Reports\\ByExamTables\\RespondentGradesTable.jsx":"21","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\services\\httpService.js":"22","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\environments\\environment.js":"23","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Exam\\QuestionToShowExam.jsx":"24","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\services\\userService.js":"25","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\services\\questionOverview.js":"26"},{"size":515,"mtime":1638208580485,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1609856925000,"results":"29","hashOfConfig":"28"},{"size":1718,"mtime":1640155119199,"results":"30","hashOfConfig":"28"},{"size":1649,"mtime":1639942375168,"results":"31","hashOfConfig":"28"},{"size":1464,"mtime":1639388328589,"results":"32","hashOfConfig":"28"},{"size":2984,"mtime":1639423715622,"results":"33","hashOfConfig":"28"},{"size":1027,"mtime":1639425511924,"results":"34","hashOfConfig":"28"},{"size":7684,"mtime":1640157905506,"results":"35","hashOfConfig":"28"},{"size":4086,"mtime":1640109875068,"results":"36","hashOfConfig":"28"},{"size":2668,"mtime":1639987845164,"results":"37","hashOfConfig":"28"},{"size":8273,"mtime":1640104457676,"results":"38","hashOfConfig":"28"},{"size":2094,"mtime":1640156730211,"results":"39","hashOfConfig":"28"},{"size":3129,"mtime":1640154894803,"results":"40","hashOfConfig":"28"},{"size":3426,"mtime":1640157918084,"results":"41","hashOfConfig":"28"},{"size":550,"mtime":1639653508625,"results":"42","hashOfConfig":"28"},{"size":513,"mtime":1639653508625,"results":"43","hashOfConfig":"28"},{"size":666,"mtime":1640007429576,"results":"44","hashOfConfig":"28"},{"size":529,"mtime":1639205135372,"results":"45","hashOfConfig":"28"},{"size":3860,"mtime":1640154821501,"results":"46","hashOfConfig":"28"},{"size":1685,"mtime":1639423715622,"results":"47","hashOfConfig":"28"},{"size":1687,"mtime":1639422482246,"results":"48","hashOfConfig":"28"},{"size":588,"mtime":1638216954482,"results":"49","hashOfConfig":"28"},{"size":58,"mtime":1609856925000,"results":"50","hashOfConfig":"28"},{"size":4549,"mtime":1639990392751,"results":"51","hashOfConfig":"28"},{"size":508,"mtime":1640070478401,"results":"52","hashOfConfig":"28"},{"size":668,"mtime":1640069222871,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"v3i13l",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"56"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\index.js",[],["123","124"],"C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\reportWebVitals.js",[],"C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\App.js",["125"],"import \"./App.css\";\nimport Reports from \"./components/Reports/Reports\";\n\nimport ManagePage from \"./components/PrincipalPage\";\n\nimport QuestionsForm from \"./components/QuestionsComponents/questionsForm\";\nimport QuestionsTable from \"./components/QuestionsComponents/questionsTable\";\nimport QuestionsToShow from \"./components/QuestionsComponents/QuestionShow\";\n\n\nimport TestForm from \"./components/TestComponents/TestForm\";\nimport TestTable from \"./components/TestComponents/TestTable\";\n\n\nimport { BrowserRouter, Route, Routes, hashHistory } from \"react-router-dom\";\nimport Exam from \"./components/Exam/ExamForm\";\nimport UserData from \"./components/Exam/UserDataExam\";\nimport ReportByExam from \"./components/Reports/ReportByExam\";\nimport ReportByStudent from \"./components/Reports/ReportByStudent\";\n\nconst App = () => {\n  return (\n    <BrowserRouter >\n      <Routes>\n        <Route path=\"/\" exact element={<ManagePage />} />\n\n        \n        <Route path=\"/Questions/Form/:id\" element={<QuestionsForm />} />\n        <Route path=\"/Questions/Table\" element={<QuestionsTable />} />\n\n\n        <Route path=\"/Test/Form/:id\" element={<TestForm />} />\n        <Route path=\"/Test/Table\" element={<TestTable />} />\n\n\n\n        <Route path=\"/Questions/Edit/:id\" element={<Reports />} />\n        <Route path=\"/Questions/Show/:id\" element={<QuestionsToShow />} />\n        <Route path=\"/Exam/:id\" element={<Exam />} />\n\n\n        <Route path=\"/Reports\" element={<Reports />} />\n        <Route path=\"/User\" element={<UserData />} />\n\n        <Route path=\"/Reports/ByExam\" element={<ReportByExam/>}/>\n        <Route path=\"/Reports/ByStudent\" element={<ReportByStudent/>}/>\n\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\PrincipalPage.jsx",["126","127"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Stack from '@mui/material/Stack';\r\nimport Paper from '@mui/material/Paper';\r\nimport MenuList from '@mui/material/MenuList';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MenuListComposition = () => {\r\n  return (\r\n    <MenuList  >\r\n      <Paper sx={{ width: 160, maxWidth: '100%' }}>\r\n        <MenuItem>\r\n          <BottomNavigation value=\"Manage Questions\">\r\n            <BottomNavigationAction\r\n              className=\"btn btn-info\"\r\n              component={Link}\r\n              to=\"/Questions/Table\"\r\n              label=\"Manage Questions\"\r\n              value=\"Manage Questions\" />\r\n          </BottomNavigation>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <BottomNavigation value=\"Manage Test\">\r\n            <BottomNavigationAction\r\n              className=\"btn btn-info\"\r\n              component={Link}\r\n              to=\"/Test/Table\"\r\n              label=\"Manage Test\"\r\n              value=\"Manage Test\" />\r\n          </BottomNavigation>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <BottomNavigation value=\"Reports\">\r\n            <BottomNavigationAction\r\n              className=\"btn btn-info\"\r\n              component={Link}\r\n              to=\"/User\"\r\n              label=\"Reports\"\r\n              value=\"Reports\"\r\n            />\r\n          </BottomNavigation>\r\n        </MenuItem>\r\n      </Paper>\r\n    </MenuList>\r\n  );\r\n}\r\n\r\nexport default MenuListComposition;","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Reports\\Reports.jsx",["128","129","130"],"import React, { useState, Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import TextField from '@mui/material/TextField';\r\n// import DateRangePicker from '@mui/lab/DateRangePicker';\r\n// import AdapterDateFns from '@mui/lab/AdapterDateFns';\r\n// import LocalizationProvider from '@mui/lab/LocalizationProvider'\r\n\r\nconst Reports = () => {\r\n\r\n  const [value, setValue] = useState(new Date());\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n\r\n      <div className=\"mb-3\">\r\n        <label className=\"form-label\">Select Test:</label>\r\n        <select className=\"form-select\">\r\n          <option value=\"development\">development</option>\r\n          <option value=\"development\">development</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>Data Range:</div>\r\n    \r\n      {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DateRangePicker\r\n        disablePast\r\n        value={value}\r\n        maxDate={getWeeksAfter(value[0], 4)}\r\n        onChange={(newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        renderInput={(startProps, endProps) => (\r\n          <React.Fragment>\r\n            <TextField {...startProps} />\r\n            <Box sx={{ mx: 2 }}> to </Box>\r\n            <TextField {...endProps} />\r\n          </React.Fragment>\r\n        )}\r\n      />\r\n    </LocalizationProvider> */}\r\n<div>\r\n  <Link > Generate Report</Link>\r\n  <Link to=\"/\"> Back</Link>\r\n</div>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default Reports;\r\n","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Reports\\ReportByExam.jsx",["131","132"],"import { useState, useEffect } from \"react\";\r\nimport Divider from '@mui/material/Divider';\r\nimport RespondentGradesTable from \"./ByExamTables/RespondentGradesTable\";\r\nimport QuestionStaticsTable from \"./ByExamTables/QuestionStaticsTable\";\r\nimport { Button } from \"@mui/material\";\r\n\r\n\r\nconst ReportByExam = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label>TestReport:</label>\r\n            </div>\r\n\r\n            <br />\r\n            <Divider />\r\n            <br />\r\n            <br />\r\n\r\n\r\n            <div>\r\n                <label>Test Name:</label>\r\n                <span />\r\n            </div>\r\n            <div>\r\n                <label>Test Code:</label>\r\n                <span />\r\n            </div>\r\n            <div>\r\n                <label>Test Id:</label>\r\n                <span />\r\n            </div>\r\n            <div>\r\n                <label>Test Type:</label>\r\n                <span />\r\n            </div>\r\n            <div>\r\n                <label>Number of Questions:</label>\r\n                <span />\r\n            </div>\r\n            <div>\r\n                <label>Pasing Grade:</label>\r\n                <span />\r\n            </div>\r\n            <div>\r\n                <label>Number of submisions:</label>\r\n                <span />\r\n            </div>\r\n            <div>\r\n                <label>Number of  passed:</label>\r\n                <span />\r\n            </div>\r\n            <div>\r\n                <label>Passing porcentage:</label>\r\n                <span />\r\n            </div>\r\n            <div>\r\n                <label>Average Grade:</label>\r\n                <span />\r\n            </div>\r\n            <div>\r\n                <label>Meidan Grade:</label>\r\n                <span />\r\n            </div>\r\n\r\n            <br />\r\n            <Divider />\r\n            <br />\r\n\r\n            <h4>\r\n                Respondent Grades and Answers (Table)\r\n            </h4>\r\n            <div>\r\n                <RespondentGradesTable></RespondentGradesTable>\r\n            </div>\r\n\r\n            <br />\r\n            <Divider />\r\n            <br />\r\n            <br />\r\n\r\n            <div>\r\n                <h3>Question Statistics</h3>\r\n            </div>\r\n            <div>\r\n                Click a question to show statics regarding its answers,then click the answer to see which answer each respondent selected.<br />\r\n                You can use de following buttons to do the same with the question in the list\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n                <label>Filter By tags or content:</label>\r\n                <input type=\"text\" />\r\n            </div>\r\n            <div>\r\n                <QuestionStaticsTable></QuestionStaticsTable>\r\n            </div>\r\n            <div>\r\n                <Button>Back</Button>\r\n                <Button>Export To Excel</Button>\r\n                <Button>Print Report</Button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReportByExam;","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Reports\\ReportByStudent.jsx",["133","134"],"import { useState, useEffect } from \"react\";\r\nconst ReportByStudent = () => {\r\n    return (\r\n        <div>\r\n            <h2>Report By Respondent Name</h2>\r\n            <br/>\r\n            <br/>\r\n            <div>\r\n                <h3>Find a Respondent</h3>\r\n                <br/>\r\n                <div>\r\n                    To find a respondent, start typing a name below.Then select a respondent from the list that will apear.<br/>\r\n                    Tip:To show all respondents, press the spacebar\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <label>Respondents Name:</label>\r\n                <input type=\"text\"/>\r\n            </div>\r\n            <div> Table by name</div>\r\n\r\n            <br/>\r\n            <br/>\r\n\r\n            <h2>Activity Report For : </h2>\r\n            <br/>\r\n            <div>Click a test to show its results</div>\r\n            <br/>\r\n            <div>\r\n                Table Activity\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReportByStudent;","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\QuestionsComponents\\questionsForm.jsx",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\QuestionsComponents\\QuestionShow.jsx",["151","152","153","154","155","156","157"],"import { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport QuestionService from \"../../services/questionService\";\r\nimport parse from 'html-react-parser';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nconst QuestionToShow = (props) => {\r\n\r\n\r\n  let { id } = useParams();\r\n  let currentQuestion = {};\r\n  const [question, setQuestion] = useState({});\r\n  const [answers, setAnswers] = useState([]);\r\n  const [full, setFull] = useState(false);\r\n\r\n\r\n  useEffect(async () => {\r\n\r\n\r\n    let loadQuestion = async () => {\r\n      let question = await QuestionService.getQuestionById(id);\r\n      currentQuestion = question.data[0];\r\n      setAnswers(currentQuestion.answer);\r\n      setQuestion(currentQuestion);\r\n    }\r\n    await loadQuestion();\r\n\r\n  }, [setQuestion])\r\n\r\n \r\n    if (question.questionKind == \"multiple choice\") {\r\n      return (\r\n        <div>\r\n          <h2>Number of Question</h2>\r\n          <FormLabel component=\"legend\">Question:</FormLabel>\r\n          <h4>\r\n            {question.content}\r\n          </h4>\r\n          <FormLabel component=\"legend\">Select the correct answer</FormLabel>\r\n          <div>\r\n            <MultipleChoice answer={answers}></MultipleChoice>\r\n          </div>\r\n        </div>\r\n      )\r\n  \r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n          <h2>Number of Question</h2>\r\n          <FormLabel component=\"legend\">Question:</FormLabel>\r\n          <h4>\r\n            {question.content}\r\n          </h4>\r\n  \r\n          <div>\r\n            <SingleChoice answer={answers}></SingleChoice>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst MultipleChoice = (props) => {\r\n\r\n  const [checked, setChecked] = useState([0]);\r\n\r\n  const handleToggle = (value) => () => {\r\n\r\n    debugger\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        {\r\n          props.answer.map((value) => (\r\n            <ListItem\r\n              key={value.id}\r\n              disablePadding\r\n            >\r\n              <ListItemButton role={undefined} onClick={handleToggle(value)} dense>\r\n                <ListItemIcon>\r\n                  <Checkbox\r\n                    edge=\"start\"\r\n                    checked={checked.indexOf(value) !== -1}\r\n                    tabIndex={-1}\r\n                    disableRipple\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText id={value.id} primary={parse(value.content)} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nconst SingleChoice = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n\r\n    setValue(event.target.value);\r\n\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Select the correct answer</FormLabel>\r\n      <RadioGroup\r\n        aria-label=\"gender\"\r\n        defaultValue=\"female\"\r\n        name=\"radio-buttons-group\"\r\n        value={value}\r\n        onChange={handleChange}\r\n      >\r\n\r\n        {props.answer.map(item => (\r\n          <FormControlLabel value={item.content} control={<Radio checked={item.correct} />} label={parse(item.content)} />\r\n        ))}\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\nexport default QuestionToShow;","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\QuestionsComponents\\questionsTable.jsx",["158","159"],"import React, { Component, useState, useEffect } from \"react\";\nimport QuestionService from \"../../services/questionService\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport parse from 'html-react-parser';\nimport SearchBar from \"material-ui-search-bar\";\n\n\n\n\nconst columns = [\n  { field: \"id\", headerName: \"ID\", width: 100 },\n  { field: \"tags\", headerName: \"tags\", width: 130 },\n  { field: \"content\",headerName: \"content\", width: 400,},\n  { field: \"lastChange\", headerName: \"last Update\", width: 130 },\n  { field: \"questionKind\", headerName: \"question Type\", width: 130 },\n  {\n    field: \"Actions\",\n    width: 300,\n    renderCell: (cellValues) => {\n      return (\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            component={Link}\n            to={`/Questions/Show/${cellValues.id}`}\n\n          > Show</Button>\n          <Button\n            component={Link}\n            to={`/Questions/Form/${cellValues.id}`}\n            variant=\"contained\"\n            color=\"primary\"\n          > Edit</Button>\n          <Button\n\n            variant=\"contained\"\n            color=\"primary\"\n          > Delete</Button>\n        </div>\n      );\n    }\n  },\n];\n\nconst DataGridDemo = () => {\n\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n\n    const loadQuestions = async () => {\n      const listQuestions = await QuestionService.getAllQuestions();\n      setData(listQuestions.data);\n      setRows(listQuestions.data);\n    }\n    loadQuestions();\n  }, [setData])\n\n  const [rows, setRows] = useState(data);\n  const [searched, setSearched] = useState(\"\");\n\n\n\n  const requestSearch = (searchedVal) => {\n    const filteredRows = data.filter((row) => {\n      return row.tags.toLowerCase().includes(searchedVal.toLowerCase());\n    });\n    setRows(filteredRows);\n  };\n\n\n  const cancelSearch = () => {\n    setSearched(\"\");\n    requestSearch(searched);\n  };\n\n\n    return (\n      <div>\n        <div>\n          <SearchBar\n            value={searched}\n            onChange={(searchVal) => requestSearch(searchVal)}\n            onCancelSearch={() => cancelSearch()}\n          />\n        </div>\n        <div style={{ height: 500, width: \"100%\" }}>\n          <DataGrid\n            rowHeight={120}\n            rows={rows}\n            columns={columns}\n            pageSize={5}\n\n          />\n        </div>\n        <div>\n          <Link to=\"/Questions/Form/0\" className=\"btn btn-success\">Add New Question</Link>\n          <Link to=\"/\" className=\"btn btn-warning\">Back</Link>\n        </div>\n      </div>\n    );\n  \n}\n\n\nexport default DataGridDemo;\n","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\TestComponents\\TestForm.jsx",["160","161","162","163","164","165","166","167","168","169","170","171","172"],"import { useState, useEffect } from \"react\";\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport QuestionService from \"../../services/questionService\";\r\nimport TestService from \"../../services/testService\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport parse from 'html-react-parser';\r\nimport { Link ,useParams} from \"react-router-dom\";\r\nimport { set, useForm } from 'react-hook-form'\r\nimport 'bulma/css/bulma.css'\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport { StringNANvalidation, NumberNANvalidation } from \"../../validations/Validations\"\r\n\r\n\r\n\r\n\r\n\r\nconst TestForm = () => {\r\n\r\n  let { id } = useParams();\r\n  const [lenguage, setLenguage] = useState(\"english choice\");\r\n  const [type, setType] = useState(\"defined\");\r\n  const [name, setName] = useState(\"\");\r\n  const [passingNote, setPassingNote] = useState(0);\r\n  const [faileture, setFaileture] = useState(\"\");\r\n  const [succes, setSuccess] = useState(\"\");\r\n  const [header, setHeader] = useState(\"\");\r\n  const [radioShowAnswer, setRadioShowAnswer] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [test, setTest] = useState([]);\r\n  const [checked, setChecked] = useState([0]);\r\n  const [questionsList, setQuestionsList] = useState([]);\r\n  const [topic, setTopic] = useState(\"Development\");\r\n  const [rows, setRows] = useState(data);\r\n  const [searched, setSearched] = useState(\"\");\r\n  let err = {};\r\n\r\n\r\n  useEffect(async () => {\r\n    const loadQuestions = async () => {\r\n      const listQuestions = await QuestionService.getAllQuestions();\r\n      setData(listQuestions.data);\r\n      setRows(listQuestions.data);\r\n    }\r\n    const loadTestById = async () => {\r\n      const test = await TestService.getTestById(id);\r\n      setTest(test.data[0]);\r\n     \r\n    }\r\n    await loadQuestions();\r\n    if(id!=0){await loadTestById();}\r\n    \r\n  }, [setData])\r\n\r\n  useEffect(() => {\r\n    if(test.name!=undefined){\r\n\r\n      setName(test.name);\r\n      setFaileture(test.textFailed);\r\n      setSuccess(test.textSucced);\r\n      setHeader(test.header);\r\n      setRadioShowAnswer(test.showAnswer);\r\n      setPassingNote(test.noteToPass);\r\n      setQuestionsList(test.questions);\r\n    }\r\n  }, [test])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleToggle = (value) => () => {\r\n\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n      setQuestionsList([...questionsList, value.id])\r\n\r\n    } else {\r\n      questionsList.splice(currentIndex - 1, 1);\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    setChecked(newChecked);\r\n  };\r\n  const ItemListClicked = (event) => {\r\n    console.log(event);\r\n  };\r\n  const requestSearch = (searchedVal) => {\r\n    const filteredRows = data.filter((row) => {\r\n      return row.tags.toLowerCase().includes(searchedVal.toLowerCase());\r\n    });\r\n    setRows(filteredRows);\r\n  };\r\n  const cancelSearch = () => {\r\n    setSearched(\"\");\r\n    requestSearch(searched);\r\n  };\r\n  const Submit = () => {\r\n    \r\n    err = StringNANvalidation(name, faileture, succes, header);\r\n    if (err.exist == false){err=NumberNANvalidation(passingNote)}\r\n\r\n    if (err.exist == false) {\r\n\r\n      const TestToAdd = {\r\n        name: name,\r\n        topic: topic,\r\n        questions: questionsList,\r\n        lenguage: lenguage,\r\n        noteToPass: passingNote,\r\n        showAnswer: radioShowAnswer,\r\n        textSucced: succes,\r\n        textFailed: faileture,\r\n        header: header,\r\n      }\r\n\r\n      if (id != 0) { TestService.addTest(TestToAdd); }\r\n      else { TestService.editTest(TestToAdd) }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={Submit}>\r\n        <div>\r\n          <label className=\"form-label\">Field of Study :</label>\r\n          Development\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Lenguage</label>\r\n            <select className=\"form-select\" onChange={(e) => setLenguage(e.target.value)} value={lenguage}>\r\n              <option value=\"hebrew choice\">hebrew</option>\r\n              <option value=\"english choice\">english</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <label>TestType</label>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Question type:</label>\r\n            <select className=\"form-select\" onChange={(e) => setType(e.target.value)} value={type}>\r\n              <option value=\"defined\">defined</option>\r\n              <option value=\"random\">random</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"form-label\">Test Name</label>\r\n          <input value={name} className=\"form-control\" onChange={(event) => { setName(event.target.value) }} />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"form-label\">Pasing Grade</label>\r\n          <input value={passingNote} className=\"form-control\" onChange={(event) => { setPassingNote(parseInt(event.target.value)) }} />\r\n        </div>\r\n\r\n        <br />\r\n        <div>\r\n          <label className=\"form-label\">Show Correct Answer<br />After Submission</label>\r\n          <Checkbox checked={radioShowAnswer} onChange={(event) => setRadioShowAnswer(event.target.checked)} />\r\n        </div>\r\n        <br />\r\n\r\n        <div>\r\n          <div><label className=\"form-label\">Header:</label></div>\r\n          <div><input value={header}  onChange={(event) => { setHeader(event.target.value) }} /></div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <div><label className=\"form-label\">Message To Show On Success:</label></div>\r\n          <div><input value={succes}  onChange={(event) => { setSuccess(event.target.value) }} /></div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <div><label className=\"form-label\">Message To Show On Failure :</label></div>\r\n          <div><input value={faileture}  onChange={(event) => { setFaileture(event.target.value) }} /></div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Certificate Templates</label>\r\n            <select className=\"form-select\" >\r\n              <option value=\"certificate\">certificate</option>\r\n              <option value=\"no certificate\">no certificate</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <br />\r\n\r\n\r\n        <label className=\"form-label\">Please Select Questions:</label>\r\n        <div className=\"container\">\r\n          <div>\r\n            <SearchBar\r\n              value={searched}\r\n              onChange={(searchVal) => requestSearch(searchVal)}\r\n              onCancelSearch={() => cancelSearch()}\r\n            />\r\n          </div>\r\n          <List>\r\n            {\r\n              rows.map((value) => (\r\n                <ListItem\r\n                  key={value.id}\r\n                  disablePadding\r\n                >\r\n                  <ListItemButton role={undefined} onClick={handleToggle(value)} dense>\r\n                    <ListItemIcon>\r\n                      <Checkbox\r\n                        edge=\"start\"\r\n                        checked={checked.indexOf(value) !== -1}\r\n                        tabIndex={-1}\r\n                        disableRipple\r\n                      />\r\n                    </ListItemIcon>\r\n                    <ListItemText id={value.id} primary={value.content} secondary={value.tags} />\r\n                  </ListItemButton>\r\n                  <ListItemIcon>\r\n                    <Button component={Link} to={`/Questions/Show/${value.id}`} onClick={ItemListClicked} >Show</Button>\r\n                  </ListItemIcon>\r\n                </ListItem>\r\n              ))}\r\n          </List>\r\n\r\n          <div>\r\n            <button type=\"submit\">Add Test</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default TestForm;\r\n","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Exam\\UserDataExam.jsx",["173","174","175","176","177","178"],"import { useState, useEffect } from \"react\";\r\nimport { useForm } from 'react-hook-form'\r\nimport 'bulma/css/bulma.css'\r\n\r\nconst UserData = (props) => {\r\n\r\n    const Submit = () => {\r\n\r\n        const user = { name: name, lastname: lastName, email: email };\r\n        props.OnUserSubmit({ user }, true);\r\n    }\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit(Submit)}>\r\n                <div>\r\n                    <div>\r\n                        <label className=\"form-label\">First Name</label>\r\n                    </div>\r\n                    <div>\r\n                        <input className=\"form-control\" onChange={(event) => setName(event.target.value)} className=\"form-control form-control-lg\" type=\"text\" \r\n                        {...register(\"firstName\", { required: true, maxLength: 20 })}\r\n                         />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <label className=\"form-label\">Last Name</label>\r\n                    </div>\r\n                    <div>\r\n                        <input className=\"form-control\" onChange={(event) => setLastName(event.target.value)} className=\"form-control orm-control-lg\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <label className=\"form-label\">Email</label>\r\n                    </div>\r\n                    <div>\r\n                        <input className=\"form-control\" onChange={(event) => setEmail(event.target.value)} className=\"form-control orm-control-lg\" type=\"text\" />\r\n                    </div>\r\n                    <button className=\"btn btn-primary\" type=\"Submit\" >Submit</button>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default UserData;","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\TestComponents\\TestTable.jsx",[],"C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Exam\\ExamForm.jsx",["179","180","181","182","183","184","185","186","187","188","189"],"C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\services\\questionService.js",[],"C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\services\\testService.js",[],"C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\validations\\Validations.js",["190","191","192","193"],"const StringNANvalidation = (...values) => {\r\n    let err = {};\r\n    let array = values;\r\n\r\n    debugger\r\n    array.forEach(value => {\r\n        debugger\r\n        \r\n        if (value.trim() == \"\"||(value==undefined)){\r\n            err.exist = true;\r\n            err.title = \"Is required!!! Please fill all the text boxes\";\r\n           \r\n        }\r\n        else\r\n        {err.exist=false;}\r\n    });\r\n\r\n    return err;\r\n}\r\n\r\nconst NumberNANvalidation = (value) => {\r\n    let err = \"\";\r\n    if (parseInt(value) == NaN) {\r\n        err.exist = true;\r\n        err.title = \"The values is not a number\";\r\n        return err;\r\n    }\r\n}\r\n\r\n\r\nexport { StringNANvalidation, NumberNANvalidation }","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Exam\\WelcomeToExam.jsx",["194","195","196"],"import { Button } from \"@material-ui/core\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst WelcomeToExam = (props) => {\r\n\r\n    const Start = () => {\r\n        props.onInitExamEvent(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>{props.header}</h3>\r\n\r\n            <div>\r\n                <label>Init Exam</label>\r\n                <div>\r\n                    <button onClick={Start}>Start Exam</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default WelcomeToExam;","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Exam\\ExamContent.jsx",["197","198","199","200","201","202","203","204","205"],"import { useEffect, useState } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport QuestionToShowExam from './QuestionToShowExam';\r\nimport Popper from '@mui/material/Popper';\r\nimport Fade from '@mui/material/Fade';\r\nimport QuestionOverviewService from '../../services/questionOverview';\r\n\r\n\r\n\r\nconst ExamContent = (props) => {\r\n\r\n\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  let questionOverview = [];\r\n\r\n  const [arrayItems, setArrayItems] = useState([])\r\n\r\n  let arrayAnswers = [];\r\n\r\n  const maxSteps = props.questions.length;\r\n  let newarray = [];\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    QuestionOverviewService.addQuestionOverview(questionOverview[0]);\r\n  };\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    QuestionOverviewService.addQuestionOverview(questionOverview[0]);\r\n  };\r\n\r\n  const AnswerMultipleItems = (arrayItems) => {\r\n    \r\n    arrayItems.forEach(element => {\r\n      \r\n      if (element != 0) {\r\n\r\n        if(newarray.length==0){\r\n          newarray.push(element)\r\n        }\r\n        \r\n        for (let index = 0; index < newarray.length; index++) {\r\n          \r\n          const existElement = newarray[index];\r\n          debugger\r\n          if (existElement != element) {\r\n            debugger\r\n            newarray.push(element)\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n  const AnswerSingleItem = (Item) => {\r\n    debugger\r\n    newarray.push(Item)\r\n  }\r\n\r\n  const SubmiExamForm = () => {\r\n    debugger\r\n  }\r\n\r\n  const SubmitClicked = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setOpen((previousOpen) => !previousOpen);\r\n  }\r\n  const canBeOpen = open && Boolean(anchorEl);\r\n  const id = canBeOpen ? 'transition-popper' : undefined;\r\n\r\n\r\n  const ButtonSubmit = () => {\r\n\r\n    if (activeStep == maxSteps - 1) {\r\n      return (\r\n        <div>\r\n          <label>Click To End Exam</label>\r\n          <br />\r\n          <button onClick={SubmitClicked}>Submit</button>\r\n          <Popper id={id} open={open} anchorEl={anchorEl} transition>\r\n            {({ TransitionProps }) => (\r\n              <Fade {...TransitionProps} timeout={350}>\r\n                <Box sx={{ border: 1, p: 1, bgcolor: 'background.paper' }}>\r\n                  <div>\r\n                    <div>Are you Sure to Submit de exam</div>\r\n                    <div>\r\n                      <button onClick={SubmiExamForm}>yes</button>\r\n                      <button onClick={SubmitClicked}>no</button>\r\n                    </div>\r\n                  </div>\r\n                </Box>\r\n              </Fade>\r\n            )}\r\n          </Popper>\r\n        </div>\r\n      )\r\n    }\r\n    return (<></>);\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 400, flexGrow: 1 }}>\r\n      <Box>\r\n        <QuestionToShowExam question={props.questions[activeStep]} onAnswerMultipleItems={AnswerMultipleItems} onAnswerSingleItem={AnswerSingleItem} />\r\n        <ButtonSubmit></ButtonSubmit>\r\n      </Box>\r\n      <Box sx={{ width: '100%' }}>\r\n        <Button onClick={handleBack} disabled={activeStep === 0}>Back</Button>\r\n        <Stepper\r\n          position=\"static\"\r\n          activeStep={activeStep}>\r\n          {props.questions.map(item =>\r\n          (\r\n            <Step>\r\n              <StepLabel></StepLabel>\r\n            </Step>\r\n          ))\r\n          }\r\n        </Stepper>\r\n        <Button onClick={handleNext} disabled={activeStep === maxSteps - 1}>Next</Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n\r\nexport default ExamContent;","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Reports\\ByExamTables\\QuestionStaticsTable.jsx",["206","207","208"],"import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n\r\n\r\nconst handleClick = (event, cellValues) => {\r\n    console.log(cellValues.row);\r\n  };\r\n  \r\n  const handleCellClick = (param, event) => {\r\n    event.stopPropagation();\r\n  };\r\n  \r\n  const handleRowClick = (param, event) => {\r\n    event.stopPropagation();\r\n  };\r\nconst columns = [\r\n    { field: \"id\", headerName: \"ID\", width: 100 },\r\n    { field: \"question\", headerName: \"Respondent\", width: 300 },\r\n    { field: \"\", headerName: \"# of submissions\", width: 150 },\r\n    { field: \"correct questions\", headerName: \"% answered correctly\", width: 150 },\r\n    { field: \"grade\", headerName: \"Grade\", width: 130 },\r\n];\r\n\r\nconst QuestionStaticsTable = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        //Sacar Data de base de Datos;\r\n\r\n        //   const loadQuestions = async () => {\r\n        //     const listOfTests = await TestService.getAllTests();\r\n        //     setData(listOfTests.data);\r\n        //   }\r\n        //   loadQuestions();\r\n    }, [setData])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ height: 500, width: \"100%\" }}>\r\n                <DataGrid\r\n                    rowHeight={120}\r\n                    rows={data}\r\n                    columns={columns}\r\n                    pageSize={5}\r\n                    checkboxSelection\r\n                    onCellClick={handleCellClick}\r\n                    onRowClick={handleRowClick}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuestionStaticsTable;","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Reports\\ByExamTables\\RespondentGradesTable.jsx",["209","210","211"],"import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n\r\n\r\nconst handleClick = (event, cellValues) => {\r\n    console.log(cellValues.row);\r\n  };\r\n  \r\n  const handleCellClick = (param, event) => {\r\n    event.stopPropagation();\r\n  };\r\n  \r\n  const handleRowClick = (param, event) => {\r\n    event.stopPropagation();\r\n  };\r\nconst columns = [\r\n    { field: \"id\", headerName: \"ID\", width: 100 },\r\n    { field: \"respondent\", headerName: \"Respondent\", width: 200 },\r\n    { field: \"\", headerName: \"Submitted\", width: 200 },\r\n    { field: \"correct questions\", headerName: \"num of questions Answered\", width: 130 },\r\n    { field: \"grade\", headerName: \"Grade\", width: 130 },\r\n];\r\n\r\nconst RespondentGradesTable = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        //Sacar Data de base de Datos;\r\n\r\n        //   const loadQuestions = async () => {\r\n        //     const listOfTests = await TestService.getAllTests();\r\n        //     setData(listOfTests.data);\r\n        //   }\r\n        //   loadQuestions();\r\n    }, [setData])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ height: 500, width: \"100%\" }}>\r\n                <DataGrid\r\n                    rowHeight={120}\r\n                    rows={data}\r\n                    columns={columns}\r\n                    pageSize={5}\r\n                    checkboxSelection\r\n                    onCellClick={handleCellClick}\r\n                    onRowClick={handleRowClick}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RespondentGradesTable;","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\services\\httpService.js",[],"C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\environments\\environment.js",["212"],"export default {\n  serverUrl: \"http://localhost:4000\",\n};\n","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\components\\Exam\\QuestionToShowExam.jsx",["213","214","215","216","217","218"],"import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport parse from 'html-react-parser';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\n\r\nconst QuestionToShowExam = (props) => {\r\n\r\n    const SelectedItem = (event) => {\r\n       props.onAnswerSingleItem(event);\r\n    }\r\n    \r\n    const SelectedMultipleItems = (event) => {\r\n        props.onAnswerMultipleItems(event);\r\n    }\r\n\r\n    const [full, setFull] = useState(false);\r\n    if (props.question.questionKind == \"multiple choice\") {\r\n        return (\r\n            <div>\r\n                <h2>Number of Question</h2>\r\n                <FormLabel component=\"legend\">Question:</FormLabel>\r\n                <h4>\r\n                    {props.question.content}\r\n                </h4>\r\n                <FormLabel component=\"legend\">Select the correct answer</FormLabel>\r\n                <div>\r\n                    <MultipleChoice onChange={SelectedMultipleItems} answer={props.question.answer}></MultipleChoice>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <h2>Number of Question</h2>\r\n                <FormLabel component=\"legend\">Question:</FormLabel>\r\n                <h4>\r\n                    {props.question.content}\r\n                </h4>\r\n\r\n                <div>\r\n                    <SingleChoice onChange={SelectedItem} answer={props.question.answer}></SingleChoice>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst MultipleChoice = (props) => {\r\n\r\n    const [checked, setChecked] = useState([0]);\r\n\r\n    const handleToggle = (value) => () => {\r\n\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n        setChecked(newChecked);\r\n\r\n        props.onChange(newChecked);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <List>\r\n                {\r\n                    props.answer.map((value) => (\r\n                        <ListItem\r\n                            key={value.id}\r\n                            disablePadding\r\n                        >\r\n                            <ListItemButton role={undefined} onClick={handleToggle(value)} dense>\r\n                                <ListItemIcon>\r\n                                    <Checkbox\r\n                                        edge=\"start\"\r\n                                        checked={checked.indexOf(value) !== -1}\r\n                                        tabIndex={-1}\r\n                                        disableRipple\r\n                                    />\r\n                                </ListItemIcon>\r\n                                <ListItemText id={value.id} primary={parse(value.content)} />\r\n                            </ListItemButton>\r\n                        </ListItem>\r\n                    ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst SingleChoice = (props) => {\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleChange = (_ref) => {\r\n\r\n        setValue(_ref.target.value);\r\n        props.onChange({content:_ref.target.value, id:_ref.target.id ,correct:true});\r\n\r\n    };\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Select the correct answer</FormLabel>\r\n            <RadioGroup\r\n                aria-label=\"gender\"\r\n                defaultValue=\"female\"\r\n                name=\"radio-buttons-group\"\r\n                value={value}\r\n                onChange={handleChange}\r\n            >\r\n\r\n                {props.answer.map(item => (\r\n                    <FormControlLabel key={item.id}  value={item.content} control={<Radio id={item.id}/>} label={parse(item.content)} />\r\n                ))}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default QuestionToShowExam;","C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\services\\userService.js",[],"C:\\Users\\97253\\Desktop\\proyectoTests\\YahalomTestsClient-Demo-master\\src\\services\\questionOverview.js",[],{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":15,"column":40,"nodeType":"225","messageId":"226","endLine":15,"endColumn":51},{"ruleId":"223","severity":1,"message":"227","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":26},{"ruleId":"223","severity":1,"message":"228","line":6,"column":8,"nodeType":"225","messageId":"226","endLine":6,"endColumn":13},{"ruleId":"223","severity":1,"message":"227","line":1,"column":27,"nodeType":"225","messageId":"226","endLine":1,"endColumn":36},{"ruleId":"223","severity":1,"message":"229","line":10,"column":10,"nodeType":"225","messageId":"226","endLine":10,"endColumn":15},{"ruleId":"223","severity":1,"message":"230","line":10,"column":17,"nodeType":"225","messageId":"226","endLine":10,"endColumn":25},{"ruleId":"223","severity":1,"message":"231","line":1,"column":10,"nodeType":"225","messageId":"226","endLine":1,"endColumn":18},{"ruleId":"223","severity":1,"message":"232","line":1,"column":20,"nodeType":"225","messageId":"226","endLine":1,"endColumn":29},{"ruleId":"223","severity":1,"message":"231","line":1,"column":10,"nodeType":"225","messageId":"226","endLine":1,"endColumn":18},{"ruleId":"223","severity":1,"message":"232","line":1,"column":20,"nodeType":"225","messageId":"226","endLine":1,"endColumn":29},{"ruleId":"223","severity":1,"message":"233","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":18},{"ruleId":"223","severity":1,"message":"234","line":3,"column":8,"nodeType":"225","messageId":"226","endLine":3,"endColumn":21},{"ruleId":"223","severity":1,"message":"235","line":11,"column":10,"nodeType":"225","messageId":"226","endLine":11,"endColumn":16},{"ruleId":"223","severity":1,"message":"236","line":14,"column":10,"nodeType":"225","messageId":"226","endLine":14,"endColumn":17},{"ruleId":"223","severity":1,"message":"237","line":16,"column":8,"nodeType":"225","messageId":"226","endLine":16,"endColumn":13},{"ruleId":"223","severity":1,"message":"238","line":17,"column":31,"nodeType":"225","messageId":"226","endLine":17,"endColumn":50},{"ruleId":"223","severity":1,"message":"239","line":29,"column":7,"nodeType":"225","messageId":"226","endLine":29,"endColumn":20},{"ruleId":"223","severity":1,"message":"240","line":31,"column":10,"nodeType":"225","messageId":"226","endLine":31,"endColumn":17},{"ruleId":"223","severity":1,"message":"241","line":40,"column":10,"nodeType":"225","messageId":"226","endLine":40,"endColumn":16},{"ruleId":"223","severity":1,"message":"242","line":41,"column":17,"nodeType":"225","messageId":"226","endLine":41,"endColumn":25},{"ruleId":"243","severity":1,"message":"244","line":56,"column":13,"nodeType":"245","endLine":67,"endColumn":4},{"ruleId":"243","severity":1,"message":"246","line":59,"column":25,"nodeType":"247","endLine":59,"endColumn":41},{"ruleId":"248","severity":1,"message":"249","line":64,"column":12,"nodeType":"250","messageId":"251","endLine":64,"endColumn":14},{"ruleId":"248","severity":1,"message":"249","line":74,"column":26,"nodeType":"250","messageId":"251","endLine":74,"endColumn":28},{"ruleId":"248","severity":1,"message":"252","line":113,"column":19,"nodeType":"250","messageId":"251","endLine":113,"endColumn":21},{"ruleId":"248","severity":1,"message":"249","line":125,"column":14,"nodeType":"250","messageId":"251","endLine":125,"endColumn":16},{"ruleId":"223","severity":1,"message":"253","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":14},{"ruleId":"223","severity":1,"message":"254","line":10,"column":8,"nodeType":"225","messageId":"226","endLine":10,"endColumn":17},{"ruleId":"223","severity":1,"message":"255","line":25,"column":10,"nodeType":"225","messageId":"226","endLine":25,"endColumn":14},{"ruleId":"223","severity":1,"message":"256","line":25,"column":16,"nodeType":"225","messageId":"226","endLine":25,"endColumn":23},{"ruleId":"243","severity":1,"message":"244","line":28,"column":13,"nodeType":"245","endLine":39,"endColumn":4},{"ruleId":"243","severity":1,"message":"246","line":33,"column":25,"nodeType":"247","endLine":33,"endColumn":41},{"ruleId":"248","severity":1,"message":"252","line":42,"column":31,"nodeType":"250","messageId":"251","endLine":42,"endColumn":33},{"ruleId":"223","severity":1,"message":"227","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":26},{"ruleId":"223","severity":1,"message":"237","line":6,"column":8,"nodeType":"225","messageId":"226","endLine":6,"endColumn":13},{"ruleId":"223","severity":1,"message":"233","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":18},{"ruleId":"223","severity":1,"message":"234","line":3,"column":8,"nodeType":"225","messageId":"226","endLine":3,"endColumn":21},{"ruleId":"223","severity":1,"message":"237","line":13,"column":8,"nodeType":"225","messageId":"226","endLine":13,"endColumn":13},{"ruleId":"223","severity":1,"message":"257","line":15,"column":10,"nodeType":"225","messageId":"226","endLine":15,"endColumn":13},{"ruleId":"223","severity":1,"message":"236","line":15,"column":15,"nodeType":"225","messageId":"226","endLine":15,"endColumn":22},{"ruleId":"223","severity":1,"message":"242","line":39,"column":17,"nodeType":"225","messageId":"226","endLine":39,"endColumn":25},{"ruleId":"243","severity":1,"message":"244","line":45,"column":13,"nodeType":"245","endLine":59,"endColumn":4},{"ruleId":"248","severity":1,"message":"249","line":57,"column":10,"nodeType":"250","messageId":"251","endLine":57,"endColumn":12},{"ruleId":"243","severity":1,"message":"258","line":59,"column":6,"nodeType":"259","endLine":59,"endColumn":15,"suggestions":"260"},{"ruleId":"248","severity":1,"message":"249","line":62,"column":17,"nodeType":"250","messageId":"251","endLine":62,"endColumn":19},{"ruleId":"248","severity":1,"message":"252","line":110,"column":19,"nodeType":"250","messageId":"251","endLine":110,"endColumn":21},{"ruleId":"248","severity":1,"message":"252","line":112,"column":19,"nodeType":"250","messageId":"251","endLine":112,"endColumn":21},{"ruleId":"248","severity":1,"message":"249","line":126,"column":14,"nodeType":"250","messageId":"251","endLine":126,"endColumn":16},{"ruleId":"223","severity":1,"message":"232","line":1,"column":20,"nodeType":"225","messageId":"226","endLine":1,"endColumn":29},{"ruleId":"223","severity":1,"message":"261","line":16,"column":37,"nodeType":"225","messageId":"226","endLine":16,"endColumn":42},{"ruleId":"223","severity":1,"message":"262","line":16,"column":57,"nodeType":"225","messageId":"226","endLine":16,"endColumn":63},{"ruleId":"263","severity":1,"message":"264","line":26,"column":107,"nodeType":"265","endLine":26,"endColumn":147},{"ruleId":"263","severity":1,"message":"264","line":36,"column":111,"nodeType":"265","endLine":36,"endColumn":150},{"ruleId":"263","severity":1,"message":"264","line":44,"column":108,"nodeType":"265","endLine":44,"endColumn":147},{"ruleId":"223","severity":1,"message":"253","line":3,"column":10,"nodeType":"225","messageId":"226","endLine":3,"endColumn":14},{"ruleId":"223","severity":1,"message":"266","line":4,"column":10,"nodeType":"225","messageId":"226","endLine":4,"endColumn":20},{"ruleId":"223","severity":1,"message":"267","line":10,"column":8,"nodeType":"225","messageId":"226","endLine":10,"endColumn":22},{"ruleId":"223","severity":1,"message":"268","line":12,"column":8,"nodeType":"225","messageId":"226","endLine":12,"endColumn":19},{"ruleId":"223","severity":1,"message":"269","line":23,"column":12,"nodeType":"225","messageId":"226","endLine":23,"endColumn":16},{"ruleId":"223","severity":1,"message":"270","line":27,"column":9,"nodeType":"225","messageId":"226","endLine":27,"endColumn":25},{"ruleId":"223","severity":1,"message":"271","line":28,"column":9,"nodeType":"225","messageId":"226","endLine":28,"endColumn":20},{"ruleId":"243","severity":1,"message":"244","line":33,"column":15,"nodeType":"245","endLine":39,"endColumn":6},{"ruleId":"243","severity":1,"message":"258","line":39,"column":8,"nodeType":"259","endLine":39,"endColumn":17,"suggestions":"272"},{"ruleId":"248","severity":1,"message":"252","line":88,"column":15,"nodeType":"250","messageId":"251","endLine":88,"endColumn":17},{"ruleId":"248","severity":1,"message":"252","line":95,"column":17,"nodeType":"250","messageId":"251","endLine":95,"endColumn":19},{"ruleId":"248","severity":1,"message":"252","line":9,"column":26,"nodeType":"250","messageId":"251","endLine":9,"endColumn":28},{"ruleId":"248","severity":1,"message":"252","line":9,"column":39,"nodeType":"250","messageId":"251","endLine":9,"endColumn":41},{"ruleId":"273","severity":1,"message":"274","line":23,"column":9,"nodeType":"250","messageId":"275","endLine":23,"endColumn":31},{"ruleId":"248","severity":1,"message":"252","line":23,"column":25,"nodeType":"250","messageId":"251","endLine":23,"endColumn":27},{"ruleId":"223","severity":1,"message":"235","line":1,"column":10,"nodeType":"225","messageId":"226","endLine":1,"endColumn":16},{"ruleId":"223","severity":1,"message":"231","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":18},{"ruleId":"223","severity":1,"message":"232","line":2,"column":20,"nodeType":"225","messageId":"226","endLine":2,"endColumn":29},{"ruleId":"223","severity":1,"message":"232","line":1,"column":10,"nodeType":"225","messageId":"226","endLine":1,"endColumn":19},{"ruleId":"223","severity":1,"message":"276","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":18},{"ruleId":"223","severity":1,"message":"277","line":23,"column":10,"nodeType":"225","messageId":"226","endLine":23,"endColumn":20},{"ruleId":"223","severity":1,"message":"278","line":23,"column":22,"nodeType":"225","messageId":"226","endLine":23,"endColumn":35},{"ruleId":"223","severity":1,"message":"279","line":25,"column":7,"nodeType":"225","messageId":"226","endLine":25,"endColumn":19},{"ruleId":"248","severity":1,"message":"249","line":43,"column":19,"nodeType":"250","messageId":"251","endLine":43,"endColumn":21},{"ruleId":"248","severity":1,"message":"252","line":45,"column":27,"nodeType":"250","messageId":"251","endLine":45,"endColumn":29},{"ruleId":"248","severity":1,"message":"249","line":53,"column":28,"nodeType":"250","messageId":"251","endLine":53,"endColumn":30},{"ruleId":"248","severity":1,"message":"252","line":81,"column":20,"nodeType":"250","messageId":"251","endLine":81,"endColumn":22},{"ruleId":"223","severity":1,"message":"253","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":14},{"ruleId":"223","severity":1,"message":"235","line":4,"column":10,"nodeType":"225","messageId":"226","endLine":4,"endColumn":16},{"ruleId":"223","severity":1,"message":"280","line":8,"column":7,"nodeType":"225","messageId":"226","endLine":8,"endColumn":18},{"ruleId":"223","severity":1,"message":"253","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":14},{"ruleId":"223","severity":1,"message":"235","line":4,"column":10,"nodeType":"225","messageId":"226","endLine":4,"endColumn":16},{"ruleId":"223","severity":1,"message":"280","line":8,"column":7,"nodeType":"225","messageId":"226","endLine":8,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":1,"column":1,"nodeType":"283","endLine":3,"endColumn":3},{"ruleId":"223","severity":1,"message":"232","line":1,"column":20,"nodeType":"225","messageId":"226","endLine":1,"endColumn":29},{"ruleId":"223","severity":1,"message":"253","line":2,"column":10,"nodeType":"225","messageId":"226","endLine":2,"endColumn":14},{"ruleId":"223","severity":1,"message":"254","line":9,"column":8,"nodeType":"225","messageId":"226","endLine":9,"endColumn":17},{"ruleId":"223","severity":1,"message":"255","line":28,"column":12,"nodeType":"225","messageId":"226","endLine":28,"endColumn":16},{"ruleId":"223","severity":1,"message":"256","line":28,"column":18,"nodeType":"225","messageId":"226","endLine":28,"endColumn":25},{"ruleId":"248","severity":1,"message":"252","line":29,"column":37,"nodeType":"250","messageId":"251","endLine":29,"endColumn":39},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"no-unused-vars","'hashHistory' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Stack' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'CKEditor' is defined but never used.","'ClassicEditor' is defined but never used.","'Button' is defined but never used.","'useForm' is defined but never used.","'parse' is defined but never used.","'NumberNANvalidation' is defined but never used.","'currentanswer' is assigned a value but never used.","'answers' is assigned a value but never used.","'answer' is assigned a value but never used.","'setTopic' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'currentQuestion' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Link' is defined but never used.","'FormGroup' is defined but never used.","'full' is assigned a value but never used.","'setFull' is assigned a value but never used.","'set' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["286"],"'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ListFormat' is defined but never used.","'QuestionToShow' is defined but never used.","'UserService' is defined but never used.","'user' is assigned a value but never used.","'questionOverview' is assigned a value but never used.","'userAnswers' is assigned a value but never used.",["287"],"use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","'useTheme' is defined but never used.","'arrayItems' is assigned a value but never used.","'setArrayItems' is assigned a value but never used.","'arrayAnswers' is assigned a value but never used.","'handleClick' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [id, setData]",{"range":"292","text":"293"},"Update the dependencies array to be: [id, setTest]",{"range":"294","text":"295"},[2215,2224],"[id, setData]",[1314,1323],"[id, setTest]"]